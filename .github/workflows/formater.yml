name: Formater

on:
  push:
    branches: [dev, dev*, patch*]
  schedule: [{ cron: 0 * * * * }]
  workflow_dispatch:

permissions:
  write-all

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pusher.name != vars.COOLPLAYLIN_BOT_NAME
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          token: ${{ secrets.COOLPLAYLIN_BOT_TOKEN }}
      - name: Set up Information
        run: |
          git config --global user.email ${{ vars.COOLPLAYLIN_BOT_EMAIL }}
          git config --global user.name ${{ vars.COOLPLAYLIN_BOT_NAME }}
      - name: Get Time
        if: github.event_name != 'push'
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYYMMDDHHmmss"
      - name: Create new branches
        if: github.event_name != 'push'
        run: |
          git checkout -b patch-${{ steps.time.outputs.time }}
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm install
      - name: Build dist file
        if: github.event_name != 'push'
        run: |
          npm run build
          git add dist --force
          if [[ -n $(git status -s) ]]; then
          git commit -m "[Automated] Upload dist file"
          fi
      - name: Format with Prettier
        run: |
          npm run format:w
          git add .
          if [[ -n $(git status -s) ]]; then
          git commit -m "[Automated] Format All of the file"
          fi
      - name: Push to branch
        if: github.event_name == 'push'
        run: |
          git push origin --force
      - name: Push to branch
        if: github.event_name != 'push'
        run: |
         git push --set-upstream origin patch-${{ steps.time.outputs.time }}
      - name: Open PR
        if: github.event_name != 'push'
        uses: actions/github-script@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "[Automated] Update",
              head: "coolplaylin:patch-${{ steps.time.outputs.time }}",
              base: "master"
            })
